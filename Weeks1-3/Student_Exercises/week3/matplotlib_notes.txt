***************************IMPORTING*************************************
import matplotlib.pyplot as plt

!pip install matplotlib


**********************AXIS AND LABELING**********************************
<dataFrameName>.plot ===> returns visual plot graph (don't need import to use .plot)

#x-axis is the default axis
#y-axis is the value axis

#plt attributes:
.plot
.xlabel('<name x-axis label>)
.ylabel('<name y-axis label>)
.title(<set title of graph>)
.grid() ===> adds a grid to the graph
.bar() ===> creates bars for chart graphic
.xticks(rotation = 45) ===> changes descriptive label angles outside of graph
.savefig('./<name file>.png') ===> save graphic in file

explode = np.where(df['expenses'] >= max_budget, .1 **if condition is true**, 0 **if condition is false**)
.pie(df['.....'], labels = df.index, shadow = True or False, startangle=50, autopct='%1.f%%', explode) ===> creates a pie chart

.show() ===> displays


*****************ADD COLUMN TO DF*******************
df['add column'] = df[]


*******ADD TOGETHER IN SAME TABLE*********
df.index **returns series** + df[''].astype(str)


********************PLOTTING POINTS/MARKERS AND LINES****************************
#adding lines:
hlines = horizontal lines
plt.hlines(0, -5, 5, color='.....', alpha=.75) (alpha is the transparency)

vlines = vertical lines
plt.vlines(0, -1.1, 1.1, color='.....', alpha=.75)

#plt.legend() ====> gives graph a legend

#adding a point/marker:
plt.plot(<x-value>, <y-value>, marker='...')
ex. plt.plot(0, 0, marker='o')

#adding a peak point:
#add a peak point:
plt.plot(df[df['cos(x)'] == df['cos(x)].max()].index, df['sin(x)].max(), marker='*')
df['cos(x)'].max()

OR

#add a peak line:
plt.hlines(df['sin(x)'].max(), -5, 5)
plt.hlines(df['cos(x)'].max(), -5, 5)
